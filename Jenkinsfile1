def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}



node {
     notifyBuild('STARTED')
    def mavenHome= tool name :"Maven3.8.5"
    
    parameters {
  choice choices: ['master', 'development', 'test ', 'uat ', 'qa'], description: 'Choose Branch ', name: 'BranchName'
  string defaultValue: 'Pradeep Meena', description: 'Project Done By :', name: 'PersonName'
}
    
    
    try {
        stage('CheckOutCode')
    {
        git branch: "${params.BranchName}", credentialsId: '01b868c4-c344-456e-9d3a-9c5ae215d89e', url: 'https://github.com/itzpradeepp/maven-web-application.git'
    }
    stage('BuildArtifact')
    { 
        sh "${mavenHome}/bin/mvn clean package"
    }
    /* stage('ExecuteSonarReport')
    {
        sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    stage('UploadArtifacts')
    {
        sh "${mavenHome}/bin/mvn deploy"
    }
    stage('DeployToContainer')
    {
        sshagent(['f38464c1-10b8-45c2-8cd6-10c80d23b3a7']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@35.154.159.195:/opt/apache-tomcat-9.0.63/webapps/"
}
    } */
    
    }
     catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
    
}
